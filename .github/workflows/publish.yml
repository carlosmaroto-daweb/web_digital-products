name: publish

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  DOCKER_IMAGE: digital-products:latest
  DOCKER_CONTAINER: web_digital-products
  PORT: 8008
  SUBDOMAIN: digital-products.carlosmaroto-daweb.com

jobs:
  create-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_CD }}

      - name: Build image
        run: |
          docker build . --tag ghcr.io/carlosmaroto-daweb/$DOCKER_IMAGE
          docker push ghcr.io/carlosmaroto-daweb/$DOCKER_IMAGE
  
  deploy:
    needs: create-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: SSH into Server
        run: |
          echo "${{ secrets.AUTH_PASS }}" > mi_clave.pem
          chmod 600 mi_clave.pem
          ssh -i mi_clave.pem -o StrictHostKeyChecking=no ${{ secrets.AUTH_SERVER }} << EOF
            sudo docker login ghcr.io -u carlosmaroto-daweb -p ${{ secrets.TOKEN_CD }}
            sudo docker pull ghcr.io/carlosmaroto-daweb/$DOCKER_IMAGE
            sudo docker stop $DOCKER_CONTAINER && sudo docker rm $DOCKER_CONTAINER
            sudo docker run -d \
              --name $DOCKER_CONTAINER \
              -p $PORT:80 \
              ghcr.io/carlosmaroto-daweb/$DOCKER_IMAGE
            sudo docker stop $DOCKER_CONTAINER
            sudo systemctl stop nginx
            if [ ! -f /etc/nginx/sites-available/$SUBDOMAIN ]; then
              sudo touch /etc/nginx/sites-available/$SUBDOMAIN
              sudo ln -s /etc/nginx/sites-available/$SUBDOMAIN /etc/nginx/sites-enabled/$SUBDOMAIN
              sudo certbot certonly --standalone -d $SUBDOMAIN --cert-name $SUBDOMAIN --non-interactive --agree-tos --email carlosmaroto.daweb@gmail.com
            fi
            sudo echo '
            server {
              listen 443 ssl;
              server_name $SUBDOMAIN;

              ssl_certificate /etc/letsencrypt/live/$SUBDOMAIN/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/$SUBDOMAIN/privkey.pem;

              location / {
                proxy_pass http://localhost:$PORT;
                proxy_set_header Host \$host;
                proxy_set_header X-Real-IP \$remote_addr;
                proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto \$scheme;
              }
            }' > /tmp/nginx_site_config
            sudo mv /tmp/nginx_site_config /etc/nginx/sites-available/$SUBDOMAIN
            sudo systemctl start nginx
          EOF